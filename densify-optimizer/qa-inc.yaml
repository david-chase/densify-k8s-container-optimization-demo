#
# Step 1 - Create the namespace
#
apiVersion: v1
kind: Namespace
metadata:
  name: qa-inc
---
#
# Step 2 - Create the deployment
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver-deployment
  namespace: qa-inc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: den-web
  template:
    metadata:
      labels:
        app: den-web
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: den-web
        ports:
        - name: http
          containerPort: 80
        resources:
          requests:
            memory: "3072Mi"
            cpu: "2000m"
          limits:
            memory: "5120Mi"
            cpu: "2000m"
      # Force this pod onto the secondary node
      nodeName: minikube-m02
---
#
# Step 3 - Create the service
#
apiVersion: v1
kind: Service
metadata:
  name: den-web-svc
  namespace: test-nginx
spec:
  type: NodePort
  selector:
    app: den-web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
#
# Step 4 - Create the ingress
#
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: den-web-ingress
  namespace: qa-inc
spec:
  rules:
    - host: den-web
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: den-web-svc
                port:
                  number: 80
---
#
# Step 5 - Create some dummy deployments
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audit-deployment
  namespace: qa-inc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: den-audit
  template:
    metadata:
      labels:
        app: den-audit
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: den-audit
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "50Mi"
            cpu: "50m"
---
#
# Step 5 - Create some dummy deployments
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: environment-deployment
  namespace: qa-inc
spec:
  replicas: 3
  selector:
    matchLabels:
      app: den-env
  template:
    metadata:
      labels:
        app: den-env
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: den-env
        resources:
          requests:
            memory: "50Mi"
            cpu: "60m"
          limits:
            memory: "60Mi"
            cpu: "70m"
---
#
# Step 5 - Create some dummy deployments
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loader-deployment
  namespace: qa-inc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: den-loader
  template:
    metadata:
      labels:
        app: den-loader
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: den-loader
        resources:
          requests:
            memory: "75Mi"
            cpu: "75m"
          limits:
            memory: "85Mi"
            cpu: "85m"
---
#
# Step 5 - Create some dummy deployments
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler-deployment
  namespace: qa-inc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: den-sched
  template:
    metadata:
      labels:
        app: den-sched
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: den-sched
        resources:
          requests:
            memory: "60Mi"
            cpu: "60m"
          limits:
            memory: "60Mi"
            cpu: "60m"